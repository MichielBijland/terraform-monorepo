name: Module
on:
  push:
    branches:
      - "main"
    paths: 
      - "modules/test/**"
  pull_request:
    branches:
      - "main"
    types:
      - "opened"
      - "reopened"
      - "synchronize"
      - "labeled"
      - "unlabeled"
    paths:
      - "modules/test/**"

defaults:
  run:
    working-directory: modules/test
    shell: bash

env:
  CHANGIE_VERSION: latest
  TF_VERSION: 1.3.9
  TF_PLUGIN_CACHE_DIR: ${{ github.workspace }}/.terraform.d/plugin-cache
  TF_ROOT: ${{ github.workspace }}/modules/test

jobs:
  terraform:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        terraform-versions: [latest]

    steps:
      - name: Checkout
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
      
      - name: Setup Terraform - ${{ matrix['terraform-versions'] }}
        uses: hashicorp/setup-terraform@633666f66e0061ca3b725c73b2ec20cd13a8fdd1 # v2.0.3
        with:
          terraform_version: ${{ matrix['terraform-versions'] }}

      - name: Terraform fmt - ${{ matrix['terraform-versions'] }}
        run: terraform fmt -check
        continue-on-error: true

      - name: Create Terraform Plugin Cache Dir
        run: mkdir -p $TF_PLUGIN_CACHE_DIR

      - name: Cache Terraform
        uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3.3.1
        with:
          path: ${{ env.TF_PLUGIN_CACHE_DIR }}
          key: ${{ runner.os }}-terraform-${{ matrix['terraform-versions'] }}-${{ hashFiles('**/*.tf') }}
          restore-keys: |
            ${{ runner.os }}-terraform-${{ matrix['terraform-versions'] }}-

      - name: Terraform Init - ${{ matrix['terraform-versions'] }}
        run: terraform init

      - name: Terraform Validate - ${{ matrix['terraform-versions'] }}
        if: ${{ matrix['terraform-versions'] == 'latest' }}
        run: terraform validate -no-color
        continue-on-error: true
      
      - name: Terraform Validate - ${{ matrix['terraform-versions'] }}
        if: ${{ matrix['terraform-versions'] != 'latest' }}
        run: terraform validate -no-color

  docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2

      - name: Check for doc changes
        uses: terraform-docs/gh-actions@main
        with:
          working-dir: ${{ env.TF_ROOT }}
          config-file: .terraform-docs.yml
          fail-on-diff: "true"

  changelog:
    runs-on: ubuntu-latest
    steps:
      - name: "Check for changelog entry"
        uses: brettcannon/check-for-changed-files@c76b10492bf14ae4d52b2ce8579c4b0a40e0e7a8 # v1.1.1
        with:
          file-pattern: |
            modules/test/.changes/unreleased/*.yaml
            modules/test/CHANGELOG.md
          skip-label: "skip changelog"
          failure-message: "Missing a changelog file in ${file-pattern}; please add one or apply the ${skip-label} label to the pull request"

  release:
    runs-on: ubuntu-latest
    needs: [terraform, docs, changelog]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2

      - name: Batch changes
        uses: miniscruff/changie-action@b6d52c80deb236a5b548f8774cd5a18b87da9e9a # v1.0.1
        with:
          version: ${{ env.CHANGIE_VERSION }}
          args: batch auto

      - name: Merge changes
        uses: miniscruff/changie-action@b6d52c80deb236a5b548f8774cd5a18b87da9e9a # v1.0.1
        with:
          version: ${{ env.CHANGIE_VERSION }}
          args: merge

      - name: Get the latest version
        id: latest
        uses: miniscruff/changie-action@b6d52c80deb236a5b548f8774cd5a18b87da9e9a # v1.0.1
        with:
          version: ${{ env.CHANGIE_VERSION }}
          args: latest
